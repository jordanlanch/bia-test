name: "Check Testing"
on: push

jobs:
  unit_e2e_testing:
    name: Tests Unit + E2E
    runs-on: ubuntu-latest
    env:
      STANDARD_MIN_COVERAGE: "80"
      APP_ENV: test
      SERVER_ADDRESS: ":8080"
      PORT: 8080
      CONTEXT_TIMEOUT: 2
      DB_HOST: "localhost"
      DB_PORT: 5433
      DB_USER: "postgres"
      DB_PASS: "password"
      DB_NAME: "bia-test-db-test"
      ACCESS_TOKEN_EXPIRY_HOUR: 2
      REFRESH_TOKEN_EXPIRY_HOUR: 168
      ACCESS_TOKEN_SECRET: "access_token_secret"
      REFRESH_TOKEN_SECRET: "refresh_token_secret"
    services:
      db-test:
        # Docker Hub image
        image: postgres:14.0-alpine
        # Provide the password for postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_DB: bia-test-db-test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5433 on service container to the host
          - 5433:5432
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.17"
          cache: true
      - name: "make unit_test"
        run: cd ./test && go test ./...
      - name: Delete Fixtures if IS_SANDOX is false
        run: |
            if [ ${IS_SANDOX} == false ]; then
              rm -rf test/fixtures
              echo "Fixtures is deleted"
            fi
      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@v3.5.3
      - name: Run migrations AND Seeds SQL
        run: sh -c 'sleep 5 &&  goose -dir storage/sql/migrations postgres "host=localhost user=postgres dbname=deuna-guard-test port=5433 sslmode=disable" up'
      - name: "E2E tests"
        run: cd ./test && go test ./...
